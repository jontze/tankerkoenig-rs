name: Test
on:
  workflow_call:
    inputs:
      build_test:
        description: "Should the build test be executed?"
        default: true
        required: false
        type: boolean

jobs:
  clippy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust_version:
          - stable
          - beta
          - nightly
          - "1.58.1" # MSRV
    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust with clippy
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
          profile: minimal
          override: true
          components: clippy
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust_version:
          - stable
          - beta
          - nightly
          - "1.58.1" # MSRV
    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
          profile: minimal
          override: true
          components: rustfmt
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust_version:
          - stable
          - beta
          - nightly
          - "1.58.1" # MSRV
    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
          profile: minimal
          override: true
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
  build_test:
    if: inputs.build_test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust_version:
          - stable
          - beta
          - nightly
          - "1.58.1" # MSRV
    steps:
      - uses: actions/checkout@v2
      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
