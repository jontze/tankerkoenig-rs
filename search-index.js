var searchIndex = new Map(JSON.parse('[\
["tankerkoenig",{"t":"PGPPPEPCNNQNNNNNCNNNNNOOOOFNNNNNNNNNNCOCONNNNFNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNEEEPPPPGPEGNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNFFNNNNNNNNNNONNOOONNNNNNNNOONONNONNNNNNNNFFFFFFFNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNOOOOOOOOOOOOOOOOOOOONNNNNNNOOOOOOONNNNNNNOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNO","n":["ClientConstruction","Error","HeaderConstruction","RequestError","ResponseParsingError","Tankerkoenig","UrlConstruction","api","borrow","borrow_mut","chunk_into_option_arrays","fmt","fmt","from","from","into","models","source","to_string","try_from","try_into","type_id","body","source","source","source","Tankerkoenig","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","new","new_with_useragent","price","price","station","station","to_owned","try_from","try_into","type_id","PriceApi","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fetch","fetch_one","fmt","from","into","to_owned","try_from","try_into","type_id","StationApi","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fetch_by_fuel","fetch_details","fetch_near","fmt","from","into","to_owned","try_from","try_into","type_id","AreaFuelResponse","AreaNearResponse","DetailsResponse","Diesel","Distance","E10","E5","Fuel","Price","PriceResponse","Sort","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","cmp","cmp","eq","eq","fmt","fmt","fmt","fmt","from","from","from_str","from_str","into","into","partial_cmp","partial_cmp","price","station","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","PriceResponse","StationPrices","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","data","deserialize","deserialize","diesel","e10","e5","eq","eq","fmt","fmt","from","from","into","into","license","ok","partial_cmp","prices","serialize","serialize","status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AreaFuelResponse","AreaNearResponse","AreaStationFuel","DetailStation","DetailsResponse","NearStation","OpeningTimes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand","brand","brand","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","data","data","data","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diesel","diesel","dist","dist","e10","e10","e5","e5","end","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","house_number","house_number","house_number","id","id","id","into","into","into","into","into","into","into","is_open","is_open","is_open","lat","lat","lat","license","license","license","lng","lng","lng","name","name","name","ok","ok","ok","opening_times","overrides","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","place","place","place","post_code","post_code","post_code","price","serialize","serialize","serialize","serialize","serialize","serialize","serialize","start","state","station","stations","stations","status","status","status","street","street","street","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","whole_day"],"q":[[0,"tankerkoenig"],[22,"tankerkoenig::Error"],[26,"tankerkoenig::api"],[45,"tankerkoenig::api::price"],[60,"tankerkoenig::api::station"],[76,"tankerkoenig::models"],[127,"tankerkoenig::models::price"],[168,"tankerkoenig::models::station"],[350,"core::fmt"],[351,"http::header::value"],[352,"core::error"],[353,"core::option"],[354,"alloc::string"],[355,"core::result"],[356,"core::any"],[357,"core::convert"],[358,"core::cmp"],[359,"serde::de"],[360,"serde::ser"],[361,"core::hash"]],"i":[3,0,3,3,3,0,3,0,3,3,0,3,3,3,3,3,0,3,3,3,3,3,38,39,40,41,0,12,12,12,12,12,12,12,12,12,12,0,12,0,12,12,12,12,12,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,22,23,22,22,0,23,0,0,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,22,23,23,22,23,22,23,22,23,22,23,0,0,22,23,22,23,22,22,23,23,22,23,22,23,0,0,18,30,18,30,18,30,18,30,18,30,18,18,30,30,30,30,18,30,18,30,18,30,18,30,18,18,30,18,18,30,30,18,30,18,30,18,30,18,30,0,0,0,0,0,0,0,26,33,24,34,25,35,36,26,33,24,34,25,35,36,33,34,35,26,33,24,34,25,35,36,26,33,24,34,25,35,36,26,33,24,34,25,35,36,36,26,24,25,26,33,24,34,25,35,36,33,35,33,34,33,35,33,35,36,26,33,24,34,25,35,36,26,33,24,34,25,35,36,26,33,24,34,25,35,36,36,33,34,35,33,34,35,26,33,24,34,25,35,36,33,34,35,33,34,35,26,24,25,33,34,35,33,34,35,26,24,25,35,35,26,33,24,34,25,35,36,33,34,35,33,34,35,34,26,33,24,34,25,35,36,36,35,25,26,24,26,24,25,33,34,35,36,26,33,24,34,25,35,36,26,33,24,34,25,35,36,26,33,24,34,25,35,36,26,33,24,34,25,35,36,35],"f":"````````{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}`{{{b{f}}{b{dh}}}j}0{cc{}}{lf}{ce{}{}}`{{{b{f}}}{{A`{{b{n}}}}}}{{{b{c}}}Ab{}}{c{{Ad{e}}}{}{}}0{{{b{c}}}Af{}}`````98{{{b{Ah}}}Ah}{{{b{c}}{b{de}}}Aj{}{}}{{{b{c}}}Aj{}}{{{b{Ah}}{b{dh}}}j}:8{c{{Ad{Ahf}}}{{An{Al}}}}{{cc}{{Ad{Ahf}}}{{An{Al}}}}````{{{b{c}}}e{}{}}887`{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{B`}}}B`}87{{{b{B`}}{b{{Bb{{A`{c}}}}}}}{{Ad{Bdf}}}{{An{Al}}Bf}}{{{b{B`}}c}{{Ad{Bdf}}}{{An{Al}}Bf}}{{{b{B`}}{b{dh}}}j}{cc{}}{ce{}{}}8{c{{Ad{e}}}{}{}}0{{{b{c}}}Af{}}`98{{{b{Bh}}}Bh}{{{b{c}}{b{de}}}Aj{}{}}{{{b{c}}}Aj{}}{{{b{Bh}}BjBjBjBlBn}{{Ad{C`f}}}}{{{b{Bh}}c}{{Ad{Cbf}}}{{An{Al}}}}{{{b{Bh}}BjBjBj}{{Ad{Cdf}}}}{{{b{Bh}}{b{dh}}}j}:9{{{b{c}}}e{}{}}998```````````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{Bl}}}Bl}{{{b{Bn}}}Bn}::99{{{b{Bl}}{b{Bl}}}Cf}{{{b{Bn}}{b{Bn}}}Cf}{{{b{Bl}}{b{Bl}}}Ch}{{{b{Bn}}{b{Bn}}}Ch}{{{b{Bl}}{b{dh}}}j}{{{b{Bl}}{b{dh}}}{{Ad{AjCj}}}}{{{b{Bn}}{b{dh}}}j}{{{b{Bn}}{b{dh}}}{{Ad{AjCj}}}}{cc{}}0{{{b{Al}}}{{Ad{Blc}}}{}}{{{b{Al}}}{{Ad{Bnc}}}{}}{ce{}{}}0{{{b{Bl}}{b{Bl}}}{{A`{Cf}}}}{{{b{Bn}}{b{Bn}}}{{A`{Cf}}}}``{{{b{c}}}e{}{}}0{{{b{c}}}Ab{}}0{c{{Ad{e}}}{}{}}76000{{{b{c}}}Af{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{Bd}}}Bd}{{{b{Cl}}}Cl}{{{b{c}}{b{de}}}Aj{}{}}0{{{b{c}}}Aj{}}0`{c{{Ad{Bd}}}Cn}{c{{Ad{Cl}}}Cn}```{{{b{Bd}}{b{Bd}}}Ch}{{{b{Cl}}{b{Cl}}}Ch}{{{b{Bd}}{b{dh}}}j}{{{b{Cl}}{b{dh}}}j}{cc{}}0{ce{}{}}0``{{{b{Cl}}{b{Cl}}}{{A`{Cf}}}}`{{{b{Bd}}c}AdD`}{{{b{Cl}}c}AdD`}`{{{b{c}}}e{}{}}0{c{{Ad{e}}}{}{}}000{{{b{c}}}Af{}}0```````{{{b{c}}}{{b{e}}}{}{}}000000{{{b{dc}}}{{b{de}}}{}{}}000000```{{{b{Cd}}}Cd}{{{b{Db}}}Db}{{{b{C`}}}C`}{{{b{Dd}}}Dd}{{{b{Cb}}}Cb}{{{b{Df}}}Df}{{{b{Dh}}}Dh}{{{b{c}}{b{de}}}Aj{}{}}000000{{{b{c}}}Aj{}}000000{{{b{Dh}}{b{Dh}}}Cf}```{c{{Ad{Cd}}}Cn}{c{{Ad{Db}}}Cn}{c{{Ad{C`}}}Cn}{c{{Ad{Dd}}}Cn}{c{{Ad{Cb}}}Cn}{c{{Ad{Df}}}Cn}{c{{Ad{Dh}}}Cn}`````````{{{b{Cd}}{b{Cd}}}Ch}{{{b{Db}}{b{Db}}}Ch}{{{b{C`}}{b{C`}}}Ch}{{{b{Dd}}{b{Dd}}}Ch}{{{b{Cb}}{b{Cb}}}Ch}{{{b{Df}}{b{Df}}}Ch}{{{b{Dh}}{b{Dh}}}Ch}{{{b{Cd}}{b{dh}}}j}{{{b{Db}}{b{dh}}}j}{{{b{C`}}{b{dh}}}j}{{{b{Dd}}{b{dh}}}j}{{{b{Cb}}{b{dh}}}j}{{{b{Df}}{b{dh}}}j}{{{b{Dh}}{b{dh}}}j}{cc{}}000000{{{b{Dh}}{b{dc}}}AjDj}``````{ce{}{}}000000````````````````````{{{b{Cd}}{b{Cd}}}{{A`{Cf}}}}{{{b{Db}}{b{Db}}}{{A`{Cf}}}}{{{b{C`}}{b{C`}}}{{A`{Cf}}}}{{{b{Dd}}{b{Dd}}}{{A`{Cf}}}}{{{b{Cb}}{b{Cb}}}{{A`{Cf}}}}{{{b{Df}}{b{Df}}}{{A`{Cf}}}}{{{b{Dh}}{b{Dh}}}{{A`{Cf}}}}```````{{{b{Cd}}c}AdD`}{{{b{Db}}c}AdD`}{{{b{C`}}c}AdD`}{{{b{Dd}}c}AdD`}{{{b{Cb}}c}AdD`}{{{b{Df}}c}AdD`}{{{b{Dh}}c}AdD`}````````````{{{b{c}}}e{}{}}000000{c{{Ad{e}}}{}{}}0000000000000{{{b{c}}}Af{}}000000`","D":"ABb","p":[[1,"reference"],[0,"mut"],[6,"Error",0],[5,"Formatter",350],[8,"Result",350],[5,"InvalidHeaderValue",351],[10,"Error",352],[6,"Option",353],[5,"String",354],[6,"Result",355],[5,"TypeId",356],[5,"Tankerkoenig",26],[1,"unit"],[1,"str"],[10,"AsRef",357],[5,"PriceApi",45],[1,"array"],[5,"PriceResponse",127],[10,"Display",350],[5,"StationApi",60],[1,"f64"],[6,"Fuel",76],[6,"Sort",76],[5,"AreaFuelResponse",168],[5,"DetailsResponse",168],[5,"AreaNearResponse",168],[6,"Ordering",358],[1,"bool"],[5,"Error",350],[5,"StationPrices",127],[10,"Deserializer",359],[10,"Serializer",360],[5,"NearStation",168],[5,"AreaStationFuel",168],[5,"DetailStation",168],[5,"OpeningTimes",168],[10,"Hasher",361],[15,"ResponseParsingError",22],[15,"RequestError",22],[15,"HeaderConstruction",22],[15,"ClientConstruction",22]],"r":[[5,26],[76,168],[77,168],[78,168],[85,127]],"b":[[11,"impl-Debug-for-TankerkoenigError"],[12,"impl-Display-for-TankerkoenigError"],[101,"impl-Debug-for-Fuel"],[102,"impl-Display-for-Fuel"],[103,"impl-Debug-for-Sort"],[104,"impl-Display-for-Sort"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM0AIAAGAAAACQABAAwAAQAPAAAAEgAEABwABQAqAAMALwAEADYAAAA5AAMAPgAEAEYAAABJAAYAVgAAAFgAEQBsAAEAcAABAHQACwCCAAkAjQABAJIAAwCcAAAAngABAKEABwCwAA0AwQAVANoABgDqAA0A/wAAACEBBgAvAQYAQgEbAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
